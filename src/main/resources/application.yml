main:
  path: /learning-reactive

server:
  port: ${APPLICATION_PORT}

spring:
  webflux:
    base-path: /learning-reactive
  r2dbc:
    url: r2dbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB_NAME}?connectTimeout=30&socketTimeout=30
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASS}
  sql:
    init:
      mode: always
      schema-locations: classpath:/schema.sql
  data:
    mongodb:
      uri: mongodb://${MONGO_USER}:${MONGO_PASS}@${MONGO_HOST}/${MONGO_DB_NAME}?authSource=admin
      database: ${MONGO_DB_NAME}
      uuid-representation: standard
      auto-index-creation: true
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  jackson:
    property-naming-strategy: SNAKE_CASE
  kafka:
    bootstrap-servers: ${KAFKA_HOST}
    properties:
      security:
        protocol: ${KAFKA_SECURITY_PROTOCOL}
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_API_CLIENT}" password="${KAFKA_API_SECRET}";
    consumer:
      auto-offset-reset: earliest
      enable-auto-commit: true
      group-id: tenpo_learning_reactive
    producer:
      properties:
        spring:
          json:
            add:
              type:
                headers: false

external-percentage:
  url: "http://localhost:8083/learning-reactive/external-api/percentage"
